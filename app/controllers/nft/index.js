const router = require("express").Router();
const NFTController = require("./controllers");
const nftController = new NFTController();
const nftMiddleware = require("./../helpers/middleware");

router.post("/allCollections", nftMiddleware.verifySuperAdminToken, nftController.allCollections);
router.post("/blockUnblockCollection", nftMiddleware.verifySuperAdminToken, nftController.blockUnblockCollection);
router.post("/blockUnblockNFT", nftMiddleware.verifySuperAdminToken, nftController.blockUnblockNFT);
router.post("/myCollections", nftMiddleware.verifyAdminToken, nftController.myCollections);
router.post("/createCollection", nftMiddleware.verifyAdminToken, nftController.createCollection);
router.post("/myNFTs", nftMiddleware.verifyAdminToken, nftController.myNFTs);
router.post("/updateCollection", nftMiddleware.verifyAdminToken, nftController.updateCollection);
router.post("/createNFT", nftMiddleware.verifyAdminToken, nftController.createNFT);
router.post("/importNFT", nftMiddleware.verifyAdminToken, nftController.importNFT);
router.get("/updateCollectionToken/:collectionAddress", nftController.updateCollectionToken);
router.post("/getCollections", nftController.getCollections);
router.post("/viewNFTs", nftController.viewNFTs);
router.post("/viewNFTDetails", nftController.viewNFTDetails);
router.post("/viewNFTByOrder", nftController.viewNFTByOrder);
router.post("/getOwnedNFTList", nftController.getOwnedNFTlist);
router.post("/getCombinedNfts", nftController.getCombinedNfts);
router.post("/getOnSaleItems", nftController.getOnSaleItems);
router.get("/getCollectionDetails/:collection", nftController.getCollectionDetails);
router.post("/insertMintAddress", nftMiddleware.verifySuperAdminToken, nftController.insertMintAddress);
router.post("/deleteMintAddress", nftMiddleware.verifySuperAdminToken, nftController.deleteMintAddress);
router.post("/fetchMintAddress", nftController.fetchMintAddress);
router.get("/fetchAllMintAddresses", nftController.fetchAllMintAddresses);
router.post("/fetchOfferMade", nftController.fetchOfferMade);
router.post("/fetchOfferReceived", nftController.fetchOfferReceived);
router.post("/updateStatus", nftMiddleware.verifyUserToken, nftController.updateStatus);
router.post("/nftButtons", nftController.nftButtons);
router.post("/refreshMetaData", nftController.refreshMetaData);
router.post("/updateOwner", nftController.updateOwner);
router.post("/viewCollectionStats", nftController.viewCollectionStats);
router.post("/viewBrandsStats", nftController.viewBrandsStats);
router.post("/viewCollectionVolume", nftController.viewCollectionVolume);
router.post("/viewBrandVolume", nftController.viewBrandVolume);
router.post("/checkCollectionName", nftController.checkCollectionName);
module.exports = router;
